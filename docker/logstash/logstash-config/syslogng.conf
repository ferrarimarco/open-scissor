input {
    zeromq {
        #input used for real net from D-Streamon
        topology => "pubsub"
        address => ["tcp://streamon:5570"]
        add_field => { "topic" => "net" }
        add_field => { "system" => "SEA_testbed" }
        add_field => { "log_type" => "net_log1" }
        codec => "plain"
        mode => "client"
    }

    zeromq {
        #input for real camera
        topology => "pubsub"
        address => ["tcp://camera:8892"]
        add_field => { "topic" => "cam" }
        add_field => { "system" => "SEA_testbed" }
        add_field => { "log_type" => "cam_AGH_log" }
        codec => "plain"
        mode => "client"
    }

    zeromq {
        #input for real camera
        topology => "pubsub"
        address => ["tcp://camera:8893"]
        add_field => { "topic" => "cam" }
        add_field => { "system" => "SEA_testbed" }
        add_field => { "log_type" => "cam_AGH_log" }
        codec => "plain"
        mode => "client"
    }

    zeromq {
        #input for real camera
        topology => "pubsub"
        address => ["tcp://camera:8894"]
        add_field => { "topic" => "cam" }
        add_field => { "system" => "SEA_testbed" }
        add_field => { "log_type" => "cam_AGH_log" }
        codec => "plain"
        mode => "client"
    }

    zeromq {
        #input for camera simulation
        topology => "pubsub"
        address => ["tcp://datasource24:8892"]
        add_field => { "topic" => "cam" }
        add_field => { "system" => "fake_testbed" }
        add_field => { "log_type" => "cam_AGH_log" }
        codec => "plain"
        mode => "client"
    }

    zeromq {
        #input for cam sensor emulation used e.g. for test-run
        topology => "pubsub"
        address => ["tcp://*:8892"]
        add_field => { "topic" => "cam" }
        add_field => { "system" => "fake_testbed" }
        add_field => { "log_type" => "cam_AGH_log" }
        codec => "plain"
    }

    zeromq {
        #input for env sensor emulation used e.g. for test-run
        topology => "pubsub"
        address => ["tcp://*:8893"]
        add_field => { "topic" => "env" }
        add_field => { "system" => "fake_testbed" }
        add_field => { "log_type" => "env_RAD" }
        codec => "plain"
    }
}

filter {
    if [topic] == "scada" or [topic] == "env" or [topic] == "net" or [topic] == "cam"  {    mutate{
        rename => { "@timestamp" => "ts_in_logstash" }
        remove_field => [ "host" ] # Delete the field afterwards
        remove_field => [ "@version" ] # Delete the field afterwards
        remove_field => [ "type" ] # Delete the field afterwards

    }
    }
}

output {
    file {
        path => "/var/log/scissor/logstash_output.txt"
        flush_interval => 0
    }

    tcp {
        host => "flume"
        port => 44444
        codec => "json_lines"
    }
}
